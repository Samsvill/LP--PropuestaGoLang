Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIV
    DQMARK
    ELSE
    FALLTHROUGH
    MENOS
    MENOSMENOS
    MUL
    RANGE
    RETURN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> impresion
Rule 2     instrucciones -> for
Rule 3     instrucciones -> for2
Rule 4     instrucciones -> for3
Rule 5     instrucciones -> mapa
Rule 6     instrucciones -> si
Rule 7     instrucciones -> array
Rule 8     instrucciones -> funcion
Rule 9     instrucciones -> concatDatos
Rule 10    instrucciones -> ArraySemantica
Rule 11    instrucciones -> switchh
Rule 12    instrucciones -> asignaciones
Rule 13    instrucciones -> expresionCondicion
Rule 14    impresion -> PRINT LPAREN dato RPAREN
Rule 15    impresion -> PRINTLN LPAREN dato RPAREN
Rule 16    dato -> INT
Rule 17    dato -> STRING
Rule 18    dato -> FLOAT
Rule 19    dato -> VARIABLE
Rule 20    for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
Rule 21    for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET
Rule 22    for3 -> FOR LCBRACKET instrucciones RCBRACKET
Rule 23    sigcomparacion -> MENORQUE
Rule 24    sigcomparacion -> MAYORQUE
Rule 25    sigcomparacion -> DIFERENTE
Rule 26    sigcomparacion -> COMPARA_IGUAL
Rule 27    sigcomparacion -> MAYORIGUAL
Rule 28    sigcomparacion -> MENORIGUAL
Rule 29    array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
Rule 30    array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
Rule 31    elementArray -> dato
Rule 32    elementArray -> dato COMMA elementArray
Rule 33    funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
Rule 34    funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
Rule 35    nombreFuncion -> VARIABLE
Rule 36    parametrosF -> VARIABLE TDATA
Rule 37    parametrosF -> VARIABLE TDATA COMMA parametrosF
Rule 38    mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
Rule 39    TDATA -> TSTRING
Rule 40    TDATA -> TINT
Rule 41    TDATA -> TFLOAT
Rule 42    adentro -> definicion
Rule 43    adentro -> definicion COMMA adentro
Rule 44    definicion -> dato COLON dato
Rule 45    si -> IF comparacion LCBRACKET instrucciones RCBRACKET
Rule 46    comparacion -> dato sigcomparacion dato
Rule 47    asignaciones -> varsimple
Rule 48    asignaciones -> varobviado
Rule 49    asignaciones -> decfast
Rule 50    varsimple -> VAR VARIABLE TDATA EQUALS dato
Rule 51    varobviado -> VAR VARIABLE EQUALS dato
Rule 52    decfast -> VARIABLE FASTDEC dato
Rule 53    concatDatos -> STRING MAS STRING
Rule 54    concatDatos -> INT MAS INT
Rule 55    ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
Rule 56    ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
Rule 57    elementStringS -> STRING
Rule 58    elementStringS -> STRING COMMA elementStringS
Rule 59    elementIntS -> INT
Rule 60    elementIntS -> INT COMMA elementIntS
Rule 61    expresionCondicion -> VARIABLE FASTDEC comparacion
Rule 62    switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET
Rule 63    cases -> case1
Rule 64    cases -> case1 cases
Rule 65    case1 -> CASE INT COLON instrucciones
Rule 66    def -> DEFAULT COMMA instrucciones

Terminals, with rules where they appear

CASE                 : 65
COLON                : 44 65
COMMA                : 32 37 43 58 60 66
COMPARA_IGUAL        : 26
DEFAULT              : 66
DIFERENTE            : 25
DIV                  : 
DQMARK               : 
ELSE                 : 
EQUALS               : 29 38 50 51 55
FALLTHROUGH          : 
FASTDEC              : 20 30 52 56 61
FLOAT                : 18
FOR                  : 20 21 22
FUNC                 : 33 34
IF                   : 45
INT                  : 16 20 20 21 29 30 54 54 55 56 59 60 65
LBRACKET             : 29 30 38 55 56
LCBRACKET            : 20 21 22 29 30 33 34 38 45 55 56 62
LPAREN               : 14 15 33 34
MAP                  : 38
MAS                  : 53 54
MASMAS               : 20
MAYORIGUAL           : 27
MAYORQUE             : 24
MENORIGUAL           : 28
MENORQUE             : 23
MENOS                : 
MENOSMENOS           : 
MUL                  : 
PRINT                : 14
PRINTLN              : 15
PUNTO_COMA           : 20 20
RANGE                : 
RBRACKET             : 29 38 55
RCBRACKET            : 22 29 30 33 34 38 45 55 56 62
RETURN               : 
RPAREN               : 14 15 33 34
STRING               : 17 53 53 57 58
SWITCH               : 62
TFLOAT               : 41
TINT                 : 40 56
TSTRING              : 39 55
VAR                  : 29 50 51 55
VARIABLE             : 19 20 20 20 21 29 30 35 36 37 38 50 51 52 55 56 61 62
error                : 

Nonterminals, with rules where they appear

ArraySemantica       : 10
TDATA                : 29 30 36 37 38 38 50
adentro              : 38 43
array                : 7
asignaciones         : 12
case1                : 63 64
cases                : 62 64
comparacion          : 45 61
concatDatos          : 9
dato                 : 14 15 31 32 44 44 46 46 50 51 52
decfast              : 49
def                  : 62
definicion           : 42 43
elementArray         : 29 30 32
elementIntS          : 56 60
elementStringS       : 55 58
expresionCondicion   : 13
for                  : 2
for2                 : 3
for3                 : 4
funcion              : 8
impresion            : 1
instrucciones        : 22 33 34 45 65 66 0
mapa                 : 5
nombreFuncion        : 33 34
parametrosF          : 34 37
si                   : 6
sigcomparacion       : 20 21 46
switchh              : 11
varobviado           : 48
varsimple            : 47

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 1
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> impresion .

    $end            reduce using rule 1 (instrucciones -> impresion .)
    RCBRACKET       reduce using rule 1 (instrucciones -> impresion .)
    CASE            reduce using rule 1 (instrucciones -> impresion .)
    DEFAULT         reduce using rule 1 (instrucciones -> impresion .)


state 3

    (2) instrucciones -> for .

    $end            reduce using rule 2 (instrucciones -> for .)
    RCBRACKET       reduce using rule 2 (instrucciones -> for .)
    CASE            reduce using rule 2 (instrucciones -> for .)
    DEFAULT         reduce using rule 2 (instrucciones -> for .)


state 4

    (3) instrucciones -> for2 .

    $end            reduce using rule 3 (instrucciones -> for2 .)
    RCBRACKET       reduce using rule 3 (instrucciones -> for2 .)
    CASE            reduce using rule 3 (instrucciones -> for2 .)
    DEFAULT         reduce using rule 3 (instrucciones -> for2 .)


state 5

    (4) instrucciones -> for3 .

    $end            reduce using rule 4 (instrucciones -> for3 .)
    RCBRACKET       reduce using rule 4 (instrucciones -> for3 .)
    CASE            reduce using rule 4 (instrucciones -> for3 .)
    DEFAULT         reduce using rule 4 (instrucciones -> for3 .)


state 6

    (5) instrucciones -> mapa .

    $end            reduce using rule 5 (instrucciones -> mapa .)
    RCBRACKET       reduce using rule 5 (instrucciones -> mapa .)
    CASE            reduce using rule 5 (instrucciones -> mapa .)
    DEFAULT         reduce using rule 5 (instrucciones -> mapa .)


state 7

    (6) instrucciones -> si .

    $end            reduce using rule 6 (instrucciones -> si .)
    RCBRACKET       reduce using rule 6 (instrucciones -> si .)
    CASE            reduce using rule 6 (instrucciones -> si .)
    DEFAULT         reduce using rule 6 (instrucciones -> si .)


state 8

    (7) instrucciones -> array .

    $end            reduce using rule 7 (instrucciones -> array .)
    RCBRACKET       reduce using rule 7 (instrucciones -> array .)
    CASE            reduce using rule 7 (instrucciones -> array .)
    DEFAULT         reduce using rule 7 (instrucciones -> array .)


state 9

    (8) instrucciones -> funcion .

    $end            reduce using rule 8 (instrucciones -> funcion .)
    RCBRACKET       reduce using rule 8 (instrucciones -> funcion .)
    CASE            reduce using rule 8 (instrucciones -> funcion .)
    DEFAULT         reduce using rule 8 (instrucciones -> funcion .)


state 10

    (9) instrucciones -> concatDatos .

    $end            reduce using rule 9 (instrucciones -> concatDatos .)
    RCBRACKET       reduce using rule 9 (instrucciones -> concatDatos .)
    CASE            reduce using rule 9 (instrucciones -> concatDatos .)
    DEFAULT         reduce using rule 9 (instrucciones -> concatDatos .)


state 11

    (10) instrucciones -> ArraySemantica .

    $end            reduce using rule 10 (instrucciones -> ArraySemantica .)
    RCBRACKET       reduce using rule 10 (instrucciones -> ArraySemantica .)
    CASE            reduce using rule 10 (instrucciones -> ArraySemantica .)
    DEFAULT         reduce using rule 10 (instrucciones -> ArraySemantica .)


state 12

    (11) instrucciones -> switchh .

    $end            reduce using rule 11 (instrucciones -> switchh .)
    RCBRACKET       reduce using rule 11 (instrucciones -> switchh .)
    CASE            reduce using rule 11 (instrucciones -> switchh .)
    DEFAULT         reduce using rule 11 (instrucciones -> switchh .)


state 13

    (12) instrucciones -> asignaciones .

    $end            reduce using rule 12 (instrucciones -> asignaciones .)
    RCBRACKET       reduce using rule 12 (instrucciones -> asignaciones .)
    CASE            reduce using rule 12 (instrucciones -> asignaciones .)
    DEFAULT         reduce using rule 12 (instrucciones -> asignaciones .)


state 14

    (13) instrucciones -> expresionCondicion .

    $end            reduce using rule 13 (instrucciones -> expresionCondicion .)
    RCBRACKET       reduce using rule 13 (instrucciones -> expresionCondicion .)
    CASE            reduce using rule 13 (instrucciones -> expresionCondicion .)
    DEFAULT         reduce using rule 13 (instrucciones -> expresionCondicion .)


state 15

    (14) impresion -> PRINT . LPAREN dato RPAREN

    LPAREN          shift and go to state 28


state 16

    (15) impresion -> PRINTLN . LPAREN dato RPAREN

    LPAREN          shift and go to state 29


state 17

    (20) for -> FOR . VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> FOR . VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> FOR . LCBRACKET instrucciones RCBRACKET

    VARIABLE        shift and go to state 30
    LCBRACKET       shift and go to state 31


state 18

    (38) mapa -> VARIABLE . EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (30) array -> VARIABLE . FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (56) ArraySemantica -> VARIABLE . FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (61) expresionCondicion -> VARIABLE . FASTDEC comparacion
    (52) decfast -> VARIABLE . FASTDEC dato

    EQUALS          shift and go to state 32
    FASTDEC         shift and go to state 33


state 19

    (54) concatDatos -> INT . MAS INT

    MAS             shift and go to state 34


state 20

    (45) si -> IF . comparacion LCBRACKET instrucciones RCBRACKET
    (46) comparacion -> . dato sigcomparacion dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    comparacion                    shift and go to state 35
    dato                           shift and go to state 36

state 21

    (29) array -> VAR . VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (55) ArraySemantica -> VAR . VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (50) varsimple -> VAR . VARIABLE TDATA EQUALS dato
    (51) varobviado -> VAR . VARIABLE EQUALS dato

    VARIABLE        shift and go to state 41


state 22

    (33) funcion -> FUNC . nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> FUNC . nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (35) nombreFuncion -> . VARIABLE

    VARIABLE        shift and go to state 43

    nombreFuncion                  shift and go to state 42

state 23

    (53) concatDatos -> STRING . MAS STRING

    MAS             shift and go to state 44


state 24

    (62) switchh -> SWITCH . VARIABLE LCBRACKET cases def RCBRACKET

    VARIABLE        shift and go to state 45


state 25

    (47) asignaciones -> varsimple .

    $end            reduce using rule 47 (asignaciones -> varsimple .)
    RCBRACKET       reduce using rule 47 (asignaciones -> varsimple .)
    CASE            reduce using rule 47 (asignaciones -> varsimple .)
    DEFAULT         reduce using rule 47 (asignaciones -> varsimple .)


state 26

    (48) asignaciones -> varobviado .

    $end            reduce using rule 48 (asignaciones -> varobviado .)
    RCBRACKET       reduce using rule 48 (asignaciones -> varobviado .)
    CASE            reduce using rule 48 (asignaciones -> varobviado .)
    DEFAULT         reduce using rule 48 (asignaciones -> varobviado .)


state 27

    (49) asignaciones -> decfast .

    $end            reduce using rule 49 (asignaciones -> decfast .)
    RCBRACKET       reduce using rule 49 (asignaciones -> decfast .)
    CASE            reduce using rule 49 (asignaciones -> decfast .)
    DEFAULT         reduce using rule 49 (asignaciones -> decfast .)


state 28

    (14) impresion -> PRINT LPAREN . dato RPAREN
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 46

state 29

    (15) impresion -> PRINTLN LPAREN . dato RPAREN
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 47

state 30

    (20) for -> FOR VARIABLE . FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> FOR VARIABLE . sigcomparacion INT LCBRACKET
    (23) sigcomparacion -> . MENORQUE
    (24) sigcomparacion -> . MAYORQUE
    (25) sigcomparacion -> . DIFERENTE
    (26) sigcomparacion -> . COMPARA_IGUAL
    (27) sigcomparacion -> . MAYORIGUAL
    (28) sigcomparacion -> . MENORIGUAL

    FASTDEC         shift and go to state 48
    MENORQUE        shift and go to state 50
    MAYORQUE        shift and go to state 51
    DIFERENTE       shift and go to state 52
    COMPARA_IGUAL   shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    MENORIGUAL      shift and go to state 55

    sigcomparacion                 shift and go to state 49

state 31

    (22) for3 -> FOR LCBRACKET . instrucciones RCBRACKET
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 56
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 32

    (38) mapa -> VARIABLE EQUALS . MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET

    MAP             shift and go to state 57


state 33

    (30) array -> VARIABLE FASTDEC . LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (56) ArraySemantica -> VARIABLE FASTDEC . LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (61) expresionCondicion -> VARIABLE FASTDEC . comparacion
    (52) decfast -> VARIABLE FASTDEC . dato
    (46) comparacion -> . dato sigcomparacion dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    LBRACKET        shift and go to state 58
    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    comparacion                    shift and go to state 59
    dato                           shift and go to state 60

state 34

    (54) concatDatos -> INT MAS . INT

    INT             shift and go to state 61


state 35

    (45) si -> IF comparacion . LCBRACKET instrucciones RCBRACKET

    LCBRACKET       shift and go to state 62


state 36

    (46) comparacion -> dato . sigcomparacion dato
    (23) sigcomparacion -> . MENORQUE
    (24) sigcomparacion -> . MAYORQUE
    (25) sigcomparacion -> . DIFERENTE
    (26) sigcomparacion -> . COMPARA_IGUAL
    (27) sigcomparacion -> . MAYORIGUAL
    (28) sigcomparacion -> . MENORIGUAL

    MENORQUE        shift and go to state 50
    MAYORQUE        shift and go to state 51
    DIFERENTE       shift and go to state 52
    COMPARA_IGUAL   shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    MENORIGUAL      shift and go to state 55

    sigcomparacion                 shift and go to state 63

state 37

    (16) dato -> INT .

    MENORQUE        reduce using rule 16 (dato -> INT .)
    MAYORQUE        reduce using rule 16 (dato -> INT .)
    DIFERENTE       reduce using rule 16 (dato -> INT .)
    COMPARA_IGUAL   reduce using rule 16 (dato -> INT .)
    MAYORIGUAL      reduce using rule 16 (dato -> INT .)
    MENORIGUAL      reduce using rule 16 (dato -> INT .)
    RPAREN          reduce using rule 16 (dato -> INT .)
    $end            reduce using rule 16 (dato -> INT .)
    RCBRACKET       reduce using rule 16 (dato -> INT .)
    CASE            reduce using rule 16 (dato -> INT .)
    DEFAULT         reduce using rule 16 (dato -> INT .)
    LCBRACKET       reduce using rule 16 (dato -> INT .)
    COMMA           reduce using rule 16 (dato -> INT .)
    COLON           reduce using rule 16 (dato -> INT .)


state 38

    (17) dato -> STRING .

    MENORQUE        reduce using rule 17 (dato -> STRING .)
    MAYORQUE        reduce using rule 17 (dato -> STRING .)
    DIFERENTE       reduce using rule 17 (dato -> STRING .)
    COMPARA_IGUAL   reduce using rule 17 (dato -> STRING .)
    MAYORIGUAL      reduce using rule 17 (dato -> STRING .)
    MENORIGUAL      reduce using rule 17 (dato -> STRING .)
    RPAREN          reduce using rule 17 (dato -> STRING .)
    $end            reduce using rule 17 (dato -> STRING .)
    RCBRACKET       reduce using rule 17 (dato -> STRING .)
    CASE            reduce using rule 17 (dato -> STRING .)
    DEFAULT         reduce using rule 17 (dato -> STRING .)
    LCBRACKET       reduce using rule 17 (dato -> STRING .)
    COMMA           reduce using rule 17 (dato -> STRING .)
    COLON           reduce using rule 17 (dato -> STRING .)


state 39

    (18) dato -> FLOAT .

    MENORQUE        reduce using rule 18 (dato -> FLOAT .)
    MAYORQUE        reduce using rule 18 (dato -> FLOAT .)
    DIFERENTE       reduce using rule 18 (dato -> FLOAT .)
    COMPARA_IGUAL   reduce using rule 18 (dato -> FLOAT .)
    MAYORIGUAL      reduce using rule 18 (dato -> FLOAT .)
    MENORIGUAL      reduce using rule 18 (dato -> FLOAT .)
    RPAREN          reduce using rule 18 (dato -> FLOAT .)
    $end            reduce using rule 18 (dato -> FLOAT .)
    RCBRACKET       reduce using rule 18 (dato -> FLOAT .)
    CASE            reduce using rule 18 (dato -> FLOAT .)
    DEFAULT         reduce using rule 18 (dato -> FLOAT .)
    LCBRACKET       reduce using rule 18 (dato -> FLOAT .)
    COMMA           reduce using rule 18 (dato -> FLOAT .)
    COLON           reduce using rule 18 (dato -> FLOAT .)


state 40

    (19) dato -> VARIABLE .

    MENORQUE        reduce using rule 19 (dato -> VARIABLE .)
    MAYORQUE        reduce using rule 19 (dato -> VARIABLE .)
    DIFERENTE       reduce using rule 19 (dato -> VARIABLE .)
    COMPARA_IGUAL   reduce using rule 19 (dato -> VARIABLE .)
    MAYORIGUAL      reduce using rule 19 (dato -> VARIABLE .)
    MENORIGUAL      reduce using rule 19 (dato -> VARIABLE .)
    RPAREN          reduce using rule 19 (dato -> VARIABLE .)
    $end            reduce using rule 19 (dato -> VARIABLE .)
    RCBRACKET       reduce using rule 19 (dato -> VARIABLE .)
    CASE            reduce using rule 19 (dato -> VARIABLE .)
    DEFAULT         reduce using rule 19 (dato -> VARIABLE .)
    LCBRACKET       reduce using rule 19 (dato -> VARIABLE .)
    COMMA           reduce using rule 19 (dato -> VARIABLE .)
    COLON           reduce using rule 19 (dato -> VARIABLE .)


state 41

    (29) array -> VAR VARIABLE . EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (55) ArraySemantica -> VAR VARIABLE . EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (50) varsimple -> VAR VARIABLE . TDATA EQUALS dato
    (51) varobviado -> VAR VARIABLE . EQUALS dato
    (39) TDATA -> . TSTRING
    (40) TDATA -> . TINT
    (41) TDATA -> . TFLOAT

    EQUALS          shift and go to state 64
    TSTRING         shift and go to state 66
    TINT            shift and go to state 67
    TFLOAT          shift and go to state 68

    TDATA                          shift and go to state 65

state 42

    (33) funcion -> FUNC nombreFuncion . LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> FUNC nombreFuncion . LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET

    LPAREN          shift and go to state 69


state 43

    (35) nombreFuncion -> VARIABLE .

    LPAREN          reduce using rule 35 (nombreFuncion -> VARIABLE .)


state 44

    (53) concatDatos -> STRING MAS . STRING

    STRING          shift and go to state 70


state 45

    (62) switchh -> SWITCH VARIABLE . LCBRACKET cases def RCBRACKET

    LCBRACKET       shift and go to state 71


state 46

    (14) impresion -> PRINT LPAREN dato . RPAREN

    RPAREN          shift and go to state 72


state 47

    (15) impresion -> PRINTLN LPAREN dato . RPAREN

    RPAREN          shift and go to state 73


state 48

    (20) for -> FOR VARIABLE FASTDEC . INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET

    INT             shift and go to state 74


state 49

    (21) for2 -> FOR VARIABLE sigcomparacion . INT LCBRACKET

    INT             shift and go to state 75


state 50

    (23) sigcomparacion -> MENORQUE .

    INT             reduce using rule 23 (sigcomparacion -> MENORQUE .)
    STRING          reduce using rule 23 (sigcomparacion -> MENORQUE .)
    FLOAT           reduce using rule 23 (sigcomparacion -> MENORQUE .)
    VARIABLE        reduce using rule 23 (sigcomparacion -> MENORQUE .)


state 51

    (24) sigcomparacion -> MAYORQUE .

    INT             reduce using rule 24 (sigcomparacion -> MAYORQUE .)
    STRING          reduce using rule 24 (sigcomparacion -> MAYORQUE .)
    FLOAT           reduce using rule 24 (sigcomparacion -> MAYORQUE .)
    VARIABLE        reduce using rule 24 (sigcomparacion -> MAYORQUE .)


state 52

    (25) sigcomparacion -> DIFERENTE .

    INT             reduce using rule 25 (sigcomparacion -> DIFERENTE .)
    STRING          reduce using rule 25 (sigcomparacion -> DIFERENTE .)
    FLOAT           reduce using rule 25 (sigcomparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 25 (sigcomparacion -> DIFERENTE .)


state 53

    (26) sigcomparacion -> COMPARA_IGUAL .

    INT             reduce using rule 26 (sigcomparacion -> COMPARA_IGUAL .)
    STRING          reduce using rule 26 (sigcomparacion -> COMPARA_IGUAL .)
    FLOAT           reduce using rule 26 (sigcomparacion -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 26 (sigcomparacion -> COMPARA_IGUAL .)


state 54

    (27) sigcomparacion -> MAYORIGUAL .

    INT             reduce using rule 27 (sigcomparacion -> MAYORIGUAL .)
    STRING          reduce using rule 27 (sigcomparacion -> MAYORIGUAL .)
    FLOAT           reduce using rule 27 (sigcomparacion -> MAYORIGUAL .)
    VARIABLE        reduce using rule 27 (sigcomparacion -> MAYORIGUAL .)


state 55

    (28) sigcomparacion -> MENORIGUAL .

    INT             reduce using rule 28 (sigcomparacion -> MENORIGUAL .)
    STRING          reduce using rule 28 (sigcomparacion -> MENORIGUAL .)
    FLOAT           reduce using rule 28 (sigcomparacion -> MENORIGUAL .)
    VARIABLE        reduce using rule 28 (sigcomparacion -> MENORIGUAL .)


state 56

    (22) for3 -> FOR LCBRACKET instrucciones . RCBRACKET

    RCBRACKET       shift and go to state 76


state 57

    (38) mapa -> VARIABLE EQUALS MAP . LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET

    LBRACKET        shift and go to state 77


state 58

    (30) array -> VARIABLE FASTDEC LBRACKET . INT TDATA LCBRACKET elementArray RCBRACKET
    (56) ArraySemantica -> VARIABLE FASTDEC LBRACKET . INT TINT LCBRACKET elementIntS RCBRACKET

    INT             shift and go to state 78


state 59

    (61) expresionCondicion -> VARIABLE FASTDEC comparacion .

    $end            reduce using rule 61 (expresionCondicion -> VARIABLE FASTDEC comparacion .)
    RCBRACKET       reduce using rule 61 (expresionCondicion -> VARIABLE FASTDEC comparacion .)
    CASE            reduce using rule 61 (expresionCondicion -> VARIABLE FASTDEC comparacion .)
    DEFAULT         reduce using rule 61 (expresionCondicion -> VARIABLE FASTDEC comparacion .)


state 60

    (52) decfast -> VARIABLE FASTDEC dato .
    (46) comparacion -> dato . sigcomparacion dato
    (23) sigcomparacion -> . MENORQUE
    (24) sigcomparacion -> . MAYORQUE
    (25) sigcomparacion -> . DIFERENTE
    (26) sigcomparacion -> . COMPARA_IGUAL
    (27) sigcomparacion -> . MAYORIGUAL
    (28) sigcomparacion -> . MENORIGUAL

    $end            reduce using rule 52 (decfast -> VARIABLE FASTDEC dato .)
    RCBRACKET       reduce using rule 52 (decfast -> VARIABLE FASTDEC dato .)
    CASE            reduce using rule 52 (decfast -> VARIABLE FASTDEC dato .)
    DEFAULT         reduce using rule 52 (decfast -> VARIABLE FASTDEC dato .)
    MENORQUE        shift and go to state 50
    MAYORQUE        shift and go to state 51
    DIFERENTE       shift and go to state 52
    COMPARA_IGUAL   shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    MENORIGUAL      shift and go to state 55

    sigcomparacion                 shift and go to state 63

state 61

    (54) concatDatos -> INT MAS INT .

    $end            reduce using rule 54 (concatDatos -> INT MAS INT .)
    RCBRACKET       reduce using rule 54 (concatDatos -> INT MAS INT .)
    CASE            reduce using rule 54 (concatDatos -> INT MAS INT .)
    DEFAULT         reduce using rule 54 (concatDatos -> INT MAS INT .)


state 62

    (45) si -> IF comparacion LCBRACKET . instrucciones RCBRACKET
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 79
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 63

    (46) comparacion -> dato sigcomparacion . dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 80

state 64

    (29) array -> VAR VARIABLE EQUALS . LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (55) ArraySemantica -> VAR VARIABLE EQUALS . LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (51) varobviado -> VAR VARIABLE EQUALS . dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    LBRACKET        shift and go to state 81
    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 82

state 65

    (50) varsimple -> VAR VARIABLE TDATA . EQUALS dato

    EQUALS          shift and go to state 83


state 66

    (39) TDATA -> TSTRING .

    EQUALS          reduce using rule 39 (TDATA -> TSTRING .)
    RBRACKET        reduce using rule 39 (TDATA -> TSTRING .)
    LCBRACKET       reduce using rule 39 (TDATA -> TSTRING .)
    COMMA           reduce using rule 39 (TDATA -> TSTRING .)
    RPAREN          reduce using rule 39 (TDATA -> TSTRING .)


state 67

    (40) TDATA -> TINT .

    EQUALS          reduce using rule 40 (TDATA -> TINT .)
    RBRACKET        reduce using rule 40 (TDATA -> TINT .)
    COMMA           reduce using rule 40 (TDATA -> TINT .)
    RPAREN          reduce using rule 40 (TDATA -> TINT .)
    LCBRACKET       reduce using rule 40 (TDATA -> TINT .)


state 68

    (41) TDATA -> TFLOAT .

    EQUALS          reduce using rule 41 (TDATA -> TFLOAT .)
    RBRACKET        reduce using rule 41 (TDATA -> TFLOAT .)
    LCBRACKET       reduce using rule 41 (TDATA -> TFLOAT .)
    COMMA           reduce using rule 41 (TDATA -> TFLOAT .)
    RPAREN          reduce using rule 41 (TDATA -> TFLOAT .)


state 69

    (33) funcion -> FUNC nombreFuncion LPAREN . RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> FUNC nombreFuncion LPAREN . parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (36) parametrosF -> . VARIABLE TDATA
    (37) parametrosF -> . VARIABLE TDATA COMMA parametrosF

    RPAREN          shift and go to state 84
    VARIABLE        shift and go to state 86

    parametrosF                    shift and go to state 85

state 70

    (53) concatDatos -> STRING MAS STRING .

    $end            reduce using rule 53 (concatDatos -> STRING MAS STRING .)
    RCBRACKET       reduce using rule 53 (concatDatos -> STRING MAS STRING .)
    CASE            reduce using rule 53 (concatDatos -> STRING MAS STRING .)
    DEFAULT         reduce using rule 53 (concatDatos -> STRING MAS STRING .)


state 71

    (62) switchh -> SWITCH VARIABLE LCBRACKET . cases def RCBRACKET
    (63) cases -> . case1
    (64) cases -> . case1 cases
    (65) case1 -> . CASE INT COLON instrucciones

    CASE            shift and go to state 89

    cases                          shift and go to state 87
    case1                          shift and go to state 88

state 72

    (14) impresion -> PRINT LPAREN dato RPAREN .

    $end            reduce using rule 14 (impresion -> PRINT LPAREN dato RPAREN .)
    RCBRACKET       reduce using rule 14 (impresion -> PRINT LPAREN dato RPAREN .)
    CASE            reduce using rule 14 (impresion -> PRINT LPAREN dato RPAREN .)
    DEFAULT         reduce using rule 14 (impresion -> PRINT LPAREN dato RPAREN .)


state 73

    (15) impresion -> PRINTLN LPAREN dato RPAREN .

    $end            reduce using rule 15 (impresion -> PRINTLN LPAREN dato RPAREN .)
    RCBRACKET       reduce using rule 15 (impresion -> PRINTLN LPAREN dato RPAREN .)
    CASE            reduce using rule 15 (impresion -> PRINTLN LPAREN dato RPAREN .)
    DEFAULT         reduce using rule 15 (impresion -> PRINTLN LPAREN dato RPAREN .)


state 74

    (20) for -> FOR VARIABLE FASTDEC INT . PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET

    PUNTO_COMA      shift and go to state 90


state 75

    (21) for2 -> FOR VARIABLE sigcomparacion INT . LCBRACKET

    LCBRACKET       shift and go to state 91


state 76

    (22) for3 -> FOR LCBRACKET instrucciones RCBRACKET .

    $end            reduce using rule 22 (for3 -> FOR LCBRACKET instrucciones RCBRACKET .)
    RCBRACKET       reduce using rule 22 (for3 -> FOR LCBRACKET instrucciones RCBRACKET .)
    CASE            reduce using rule 22 (for3 -> FOR LCBRACKET instrucciones RCBRACKET .)
    DEFAULT         reduce using rule 22 (for3 -> FOR LCBRACKET instrucciones RCBRACKET .)


state 77

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET . TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (39) TDATA -> . TSTRING
    (40) TDATA -> . TINT
    (41) TDATA -> . TFLOAT

    TSTRING         shift and go to state 66
    TINT            shift and go to state 67
    TFLOAT          shift and go to state 68

    TDATA                          shift and go to state 92

state 78

    (30) array -> VARIABLE FASTDEC LBRACKET INT . TDATA LCBRACKET elementArray RCBRACKET
    (56) ArraySemantica -> VARIABLE FASTDEC LBRACKET INT . TINT LCBRACKET elementIntS RCBRACKET
    (39) TDATA -> . TSTRING
    (40) TDATA -> . TINT
    (41) TDATA -> . TFLOAT

    TINT            shift and go to state 94
    TSTRING         shift and go to state 66
    TFLOAT          shift and go to state 68

    TDATA                          shift and go to state 93

state 79

    (45) si -> IF comparacion LCBRACKET instrucciones . RCBRACKET

    RCBRACKET       shift and go to state 95


state 80

    (46) comparacion -> dato sigcomparacion dato .

    LCBRACKET       reduce using rule 46 (comparacion -> dato sigcomparacion dato .)
    $end            reduce using rule 46 (comparacion -> dato sigcomparacion dato .)
    RCBRACKET       reduce using rule 46 (comparacion -> dato sigcomparacion dato .)
    CASE            reduce using rule 46 (comparacion -> dato sigcomparacion dato .)
    DEFAULT         reduce using rule 46 (comparacion -> dato sigcomparacion dato .)


state 81

    (29) array -> VAR VARIABLE EQUALS LBRACKET . INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET . INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET

    INT             shift and go to state 96


state 82

    (51) varobviado -> VAR VARIABLE EQUALS dato .

    $end            reduce using rule 51 (varobviado -> VAR VARIABLE EQUALS dato .)
    RCBRACKET       reduce using rule 51 (varobviado -> VAR VARIABLE EQUALS dato .)
    CASE            reduce using rule 51 (varobviado -> VAR VARIABLE EQUALS dato .)
    DEFAULT         reduce using rule 51 (varobviado -> VAR VARIABLE EQUALS dato .)


state 83

    (50) varsimple -> VAR VARIABLE TDATA EQUALS . dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 97

state 84

    (33) funcion -> FUNC nombreFuncion LPAREN RPAREN . LCBRACKET instrucciones RCBRACKET

    LCBRACKET       shift and go to state 98


state 85

    (34) funcion -> FUNC nombreFuncion LPAREN parametrosF . RPAREN LCBRACKET instrucciones RCBRACKET

    RPAREN          shift and go to state 99


state 86

    (36) parametrosF -> VARIABLE . TDATA
    (37) parametrosF -> VARIABLE . TDATA COMMA parametrosF
    (39) TDATA -> . TSTRING
    (40) TDATA -> . TINT
    (41) TDATA -> . TFLOAT

    TSTRING         shift and go to state 66
    TINT            shift and go to state 67
    TFLOAT          shift and go to state 68

    TDATA                          shift and go to state 100

state 87

    (62) switchh -> SWITCH VARIABLE LCBRACKET cases . def RCBRACKET
    (66) def -> . DEFAULT COMMA instrucciones

    DEFAULT         shift and go to state 102

    def                            shift and go to state 101

state 88

    (63) cases -> case1 .
    (64) cases -> case1 . cases
    (63) cases -> . case1
    (64) cases -> . case1 cases
    (65) case1 -> . CASE INT COLON instrucciones

    DEFAULT         reduce using rule 63 (cases -> case1 .)
    CASE            shift and go to state 89

    case1                          shift and go to state 88
    cases                          shift and go to state 103

state 89

    (65) case1 -> CASE . INT COLON instrucciones

    INT             shift and go to state 104


state 90

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA . VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET

    VARIABLE        shift and go to state 105


state 91

    (21) for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET .

    $end            reduce using rule 21 (for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET .)
    RCBRACKET       reduce using rule 21 (for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET .)
    CASE            reduce using rule 21 (for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET .)
    DEFAULT         reduce using rule 21 (for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET .)


state 92

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET TDATA . RBRACKET TDATA LCBRACKET adentro RCBRACKET

    RBRACKET        shift and go to state 106


state 93

    (30) array -> VARIABLE FASTDEC LBRACKET INT TDATA . LCBRACKET elementArray RCBRACKET

    LCBRACKET       shift and go to state 107


state 94

    (56) ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT . LCBRACKET elementIntS RCBRACKET
    (40) TDATA -> TINT .

  ! shift/reduce conflict for LCBRACKET resolved as shift
    LCBRACKET       shift and go to state 108

  ! LCBRACKET       [ reduce using rule 40 (TDATA -> TINT .) ]


state 95

    (45) si -> IF comparacion LCBRACKET instrucciones RCBRACKET .

    $end            reduce using rule 45 (si -> IF comparacion LCBRACKET instrucciones RCBRACKET .)
    RCBRACKET       reduce using rule 45 (si -> IF comparacion LCBRACKET instrucciones RCBRACKET .)
    CASE            reduce using rule 45 (si -> IF comparacion LCBRACKET instrucciones RCBRACKET .)
    DEFAULT         reduce using rule 45 (si -> IF comparacion LCBRACKET instrucciones RCBRACKET .)


state 96

    (29) array -> VAR VARIABLE EQUALS LBRACKET INT . RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT . RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET

    RBRACKET        shift and go to state 109


state 97

    (50) varsimple -> VAR VARIABLE TDATA EQUALS dato .

    $end            reduce using rule 50 (varsimple -> VAR VARIABLE TDATA EQUALS dato .)
    RCBRACKET       reduce using rule 50 (varsimple -> VAR VARIABLE TDATA EQUALS dato .)
    CASE            reduce using rule 50 (varsimple -> VAR VARIABLE TDATA EQUALS dato .)
    DEFAULT         reduce using rule 50 (varsimple -> VAR VARIABLE TDATA EQUALS dato .)


state 98

    (33) funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET . instrucciones RCBRACKET
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 110
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 99

    (34) funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN . LCBRACKET instrucciones RCBRACKET

    LCBRACKET       shift and go to state 111


state 100

    (36) parametrosF -> VARIABLE TDATA .
    (37) parametrosF -> VARIABLE TDATA . COMMA parametrosF

    RPAREN          reduce using rule 36 (parametrosF -> VARIABLE TDATA .)
    COMMA           shift and go to state 112


state 101

    (62) switchh -> SWITCH VARIABLE LCBRACKET cases def . RCBRACKET

    RCBRACKET       shift and go to state 113


state 102

    (66) def -> DEFAULT . COMMA instrucciones

    COMMA           shift and go to state 114


state 103

    (64) cases -> case1 cases .

    DEFAULT         reduce using rule 64 (cases -> case1 cases .)


state 104

    (65) case1 -> CASE INT . COLON instrucciones

    COLON           shift and go to state 115


state 105

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE . sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (23) sigcomparacion -> . MENORQUE
    (24) sigcomparacion -> . MAYORQUE
    (25) sigcomparacion -> . DIFERENTE
    (26) sigcomparacion -> . COMPARA_IGUAL
    (27) sigcomparacion -> . MAYORIGUAL
    (28) sigcomparacion -> . MENORIGUAL

    MENORQUE        shift and go to state 50
    MAYORQUE        shift and go to state 51
    DIFERENTE       shift and go to state 52
    COMPARA_IGUAL   shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    MENORIGUAL      shift and go to state 55

    sigcomparacion                 shift and go to state 116

state 106

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET . TDATA LCBRACKET adentro RCBRACKET
    (39) TDATA -> . TSTRING
    (40) TDATA -> . TINT
    (41) TDATA -> . TFLOAT

    TSTRING         shift and go to state 66
    TINT            shift and go to state 67
    TFLOAT          shift and go to state 68

    TDATA                          shift and go to state 117

state 107

    (30) array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET . elementArray RCBRACKET
    (31) elementArray -> . dato
    (32) elementArray -> . dato COMMA elementArray
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    elementArray                   shift and go to state 118
    dato                           shift and go to state 119

state 108

    (56) ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET . elementIntS RCBRACKET
    (59) elementIntS -> . INT
    (60) elementIntS -> . INT COMMA elementIntS

    INT             shift and go to state 120

    elementIntS                    shift and go to state 121

state 109

    (29) array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET . TDATA LCBRACKET elementArray RCBRACKET
    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET . TSTRING LCBRACKET elementStringS RCBRACKET
    (39) TDATA -> . TSTRING
    (40) TDATA -> . TINT
    (41) TDATA -> . TFLOAT

    TSTRING         shift and go to state 123
    TINT            shift and go to state 67
    TFLOAT          shift and go to state 68

    TDATA                          shift and go to state 122

state 110

    (33) funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones . RCBRACKET

    RCBRACKET       shift and go to state 124


state 111

    (34) funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET . instrucciones RCBRACKET
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 125
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 112

    (37) parametrosF -> VARIABLE TDATA COMMA . parametrosF
    (36) parametrosF -> . VARIABLE TDATA
    (37) parametrosF -> . VARIABLE TDATA COMMA parametrosF

    VARIABLE        shift and go to state 86

    parametrosF                    shift and go to state 126

state 113

    (62) switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET .

    $end            reduce using rule 62 (switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET .)
    RCBRACKET       reduce using rule 62 (switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET .)
    CASE            reduce using rule 62 (switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET .)
    DEFAULT         reduce using rule 62 (switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET .)


state 114

    (66) def -> DEFAULT COMMA . instrucciones
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 127
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 115

    (65) case1 -> CASE INT COLON . instrucciones
    (1) instrucciones -> . impresion
    (2) instrucciones -> . for
    (3) instrucciones -> . for2
    (4) instrucciones -> . for3
    (5) instrucciones -> . mapa
    (6) instrucciones -> . si
    (7) instrucciones -> . array
    (8) instrucciones -> . funcion
    (9) instrucciones -> . concatDatos
    (10) instrucciones -> . ArraySemantica
    (11) instrucciones -> . switchh
    (12) instrucciones -> . asignaciones
    (13) instrucciones -> . expresionCondicion
    (14) impresion -> . PRINT LPAREN dato RPAREN
    (15) impresion -> . PRINTLN LPAREN dato RPAREN
    (20) for -> . FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET
    (21) for2 -> . FOR VARIABLE sigcomparacion INT LCBRACKET
    (22) for3 -> . FOR LCBRACKET instrucciones RCBRACKET
    (38) mapa -> . VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET
    (45) si -> . IF comparacion LCBRACKET instrucciones RCBRACKET
    (29) array -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET
    (30) array -> . VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET
    (33) funcion -> . FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET
    (34) funcion -> . FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET
    (53) concatDatos -> . STRING MAS STRING
    (54) concatDatos -> . INT MAS INT
    (55) ArraySemantica -> . VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET
    (56) ArraySemantica -> . VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET
    (62) switchh -> . SWITCH VARIABLE LCBRACKET cases def RCBRACKET
    (47) asignaciones -> . varsimple
    (48) asignaciones -> . varobviado
    (49) asignaciones -> . decfast
    (61) expresionCondicion -> . VARIABLE FASTDEC comparacion
    (50) varsimple -> . VAR VARIABLE TDATA EQUALS dato
    (51) varobviado -> . VAR VARIABLE EQUALS dato
    (52) decfast -> . VARIABLE FASTDEC dato

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    FOR             shift and go to state 17
    VARIABLE        shift and go to state 18
    IF              shift and go to state 20
    VAR             shift and go to state 21
    FUNC            shift and go to state 22
    STRING          shift and go to state 23
    INT             shift and go to state 19
    SWITCH          shift and go to state 24

    instrucciones                  shift and go to state 128
    impresion                      shift and go to state 2
    for                            shift and go to state 3
    for2                           shift and go to state 4
    for3                           shift and go to state 5
    mapa                           shift and go to state 6
    si                             shift and go to state 7
    array                          shift and go to state 8
    funcion                        shift and go to state 9
    concatDatos                    shift and go to state 10
    ArraySemantica                 shift and go to state 11
    switchh                        shift and go to state 12
    asignaciones                   shift and go to state 13
    expresionCondicion             shift and go to state 14
    varsimple                      shift and go to state 25
    varobviado                     shift and go to state 26
    decfast                        shift and go to state 27

state 116

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion . INT PUNTO_COMA VARIABLE MASMAS LCBRACKET

    INT             shift and go to state 129


state 117

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA . LCBRACKET adentro RCBRACKET

    LCBRACKET       shift and go to state 130


state 118

    (30) array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray . RCBRACKET

    RCBRACKET       shift and go to state 131


state 119

    (31) elementArray -> dato .
    (32) elementArray -> dato . COMMA elementArray

    RCBRACKET       reduce using rule 31 (elementArray -> dato .)
    COMMA           shift and go to state 132


state 120

    (59) elementIntS -> INT .
    (60) elementIntS -> INT . COMMA elementIntS

    RCBRACKET       reduce using rule 59 (elementIntS -> INT .)
    COMMA           shift and go to state 133


state 121

    (56) ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS . RCBRACKET

    RCBRACKET       shift and go to state 134


state 122

    (29) array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA . LCBRACKET elementArray RCBRACKET

    LCBRACKET       shift and go to state 135


state 123

    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING . LCBRACKET elementStringS RCBRACKET
    (39) TDATA -> TSTRING .

  ! shift/reduce conflict for LCBRACKET resolved as shift
    LCBRACKET       shift and go to state 136

  ! LCBRACKET       [ reduce using rule 39 (TDATA -> TSTRING .) ]


state 124

    (33) funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET .

    $end            reduce using rule 33 (funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET .)
    RCBRACKET       reduce using rule 33 (funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET .)
    CASE            reduce using rule 33 (funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET .)
    DEFAULT         reduce using rule 33 (funcion -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET .)


state 125

    (34) funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones . RCBRACKET

    RCBRACKET       shift and go to state 137


state 126

    (37) parametrosF -> VARIABLE TDATA COMMA parametrosF .

    RPAREN          reduce using rule 37 (parametrosF -> VARIABLE TDATA COMMA parametrosF .)


state 127

    (66) def -> DEFAULT COMMA instrucciones .

    RCBRACKET       reduce using rule 66 (def -> DEFAULT COMMA instrucciones .)


state 128

    (65) case1 -> CASE INT COLON instrucciones .

    CASE            reduce using rule 65 (case1 -> CASE INT COLON instrucciones .)
    DEFAULT         reduce using rule 65 (case1 -> CASE INT COLON instrucciones .)


state 129

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT . PUNTO_COMA VARIABLE MASMAS LCBRACKET

    PUNTO_COMA      shift and go to state 138


state 130

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET . adentro RCBRACKET
    (42) adentro -> . definicion
    (43) adentro -> . definicion COMMA adentro
    (44) definicion -> . dato COLON dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    adentro                        shift and go to state 139
    definicion                     shift and go to state 140
    dato                           shift and go to state 141

state 131

    (30) array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET .

    $end            reduce using rule 30 (array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET .)
    RCBRACKET       reduce using rule 30 (array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET .)
    CASE            reduce using rule 30 (array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET .)
    DEFAULT         reduce using rule 30 (array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET .)


state 132

    (32) elementArray -> dato COMMA . elementArray
    (31) elementArray -> . dato
    (32) elementArray -> . dato COMMA elementArray
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 119
    elementArray                   shift and go to state 142

state 133

    (60) elementIntS -> INT COMMA . elementIntS
    (59) elementIntS -> . INT
    (60) elementIntS -> . INT COMMA elementIntS

    INT             shift and go to state 120

    elementIntS                    shift and go to state 143

state 134

    (56) ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET .

    $end            reduce using rule 56 (ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET .)
    RCBRACKET       reduce using rule 56 (ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET .)
    CASE            reduce using rule 56 (ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET .)
    DEFAULT         reduce using rule 56 (ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET .)


state 135

    (29) array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET . elementArray RCBRACKET
    (31) elementArray -> . dato
    (32) elementArray -> . dato COMMA elementArray
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    elementArray                   shift and go to state 144
    dato                           shift and go to state 119

state 136

    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET . elementStringS RCBRACKET
    (57) elementStringS -> . STRING
    (58) elementStringS -> . STRING COMMA elementStringS

    STRING          shift and go to state 146

    elementStringS                 shift and go to state 145

state 137

    (34) funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET .

    $end            reduce using rule 34 (funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET .)
    RCBRACKET       reduce using rule 34 (funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET .)
    CASE            reduce using rule 34 (funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET .)
    DEFAULT         reduce using rule 34 (funcion -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET .)


state 138

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA . VARIABLE MASMAS LCBRACKET

    VARIABLE        shift and go to state 147


state 139

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro . RCBRACKET

    RCBRACKET       shift and go to state 148


state 140

    (42) adentro -> definicion .
    (43) adentro -> definicion . COMMA adentro

    RCBRACKET       reduce using rule 42 (adentro -> definicion .)
    COMMA           shift and go to state 149


state 141

    (44) definicion -> dato . COLON dato

    COLON           shift and go to state 150


state 142

    (32) elementArray -> dato COMMA elementArray .

    RCBRACKET       reduce using rule 32 (elementArray -> dato COMMA elementArray .)


state 143

    (60) elementIntS -> INT COMMA elementIntS .

    RCBRACKET       reduce using rule 60 (elementIntS -> INT COMMA elementIntS .)


state 144

    (29) array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray . RCBRACKET

    RCBRACKET       shift and go to state 151


state 145

    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS . RCBRACKET

    RCBRACKET       shift and go to state 152


state 146

    (57) elementStringS -> STRING .
    (58) elementStringS -> STRING . COMMA elementStringS

    RCBRACKET       reduce using rule 57 (elementStringS -> STRING .)
    COMMA           shift and go to state 153


state 147

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE . MASMAS LCBRACKET

    MASMAS          shift and go to state 154


state 148

    (38) mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET .

    $end            reduce using rule 38 (mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET .)
    RCBRACKET       reduce using rule 38 (mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET .)
    CASE            reduce using rule 38 (mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET .)
    DEFAULT         reduce using rule 38 (mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET .)


state 149

    (43) adentro -> definicion COMMA . adentro
    (42) adentro -> . definicion
    (43) adentro -> . definicion COMMA adentro
    (44) definicion -> . dato COLON dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    definicion                     shift and go to state 140
    adentro                        shift and go to state 155
    dato                           shift and go to state 141

state 150

    (44) definicion -> dato COLON . dato
    (16) dato -> . INT
    (17) dato -> . STRING
    (18) dato -> . FLOAT
    (19) dato -> . VARIABLE

    INT             shift and go to state 37
    STRING          shift and go to state 38
    FLOAT           shift and go to state 39
    VARIABLE        shift and go to state 40

    dato                           shift and go to state 156

state 151

    (29) array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET .

    $end            reduce using rule 29 (array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET .)
    RCBRACKET       reduce using rule 29 (array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET .)
    CASE            reduce using rule 29 (array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET .)
    DEFAULT         reduce using rule 29 (array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET .)


state 152

    (55) ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET .

    $end            reduce using rule 55 (ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET .)
    RCBRACKET       reduce using rule 55 (ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET .)
    CASE            reduce using rule 55 (ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET .)
    DEFAULT         reduce using rule 55 (ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET .)


state 153

    (58) elementStringS -> STRING COMMA . elementStringS
    (57) elementStringS -> . STRING
    (58) elementStringS -> . STRING COMMA elementStringS

    STRING          shift and go to state 146

    elementStringS                 shift and go to state 157

state 154

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS . LCBRACKET

    LCBRACKET       shift and go to state 158


state 155

    (43) adentro -> definicion COMMA adentro .

    RCBRACKET       reduce using rule 43 (adentro -> definicion COMMA adentro .)


state 156

    (44) definicion -> dato COLON dato .

    COMMA           reduce using rule 44 (definicion -> dato COLON dato .)
    RCBRACKET       reduce using rule 44 (definicion -> dato COLON dato .)


state 157

    (58) elementStringS -> STRING COMMA elementStringS .

    RCBRACKET       reduce using rule 58 (elementStringS -> STRING COMMA elementStringS .)


state 158

    (20) for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET .

    $end            reduce using rule 20 (for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET .)
    RCBRACKET       reduce using rule 20 (for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET .)
    CASE            reduce using rule 20 (for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET .)
    DEFAULT         reduce using rule 20 (for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LCBRACKET in state 94 resolved as shift
WARNING: shift/reduce conflict for LCBRACKET in state 123 resolved as shift
