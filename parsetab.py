
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CASE COLON COMMA COMPARA_IGUAL DEFAULT DIFERENTE DIV DQMARK ELSE EQUALS FALLTHROUGH FASTDEC FLOAT FOR FUNC IF INT LBRACKET LCBRACKET LPAREN MAP MAS MASMAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MENOSMENOS MUL PRINT PRINTLN PUNTO_COMA RANGE RBRACKET RCBRACKET RETURN RPAREN STRING SWITCH TFLOAT TINT TSTRING VAR VARIABLEbloqueI : instrucciones\n              | instrucciones bloqueI instrucciones : impresion\n                      | for\n                      | for2\n                      | for3\n                      | mapa\n                      | si\n                      | array\n                      | funcion\n                      | concatDatos\n                      | ArraySemantica\n                      | switchh\n                      | asignaciones\n                      | expresionCondicion\n                      impresion : PRINT LPAREN dato RPAREN\n  | PRINTLN LPAREN dato RPARENdato : INT \n  | STRING\n  | FLOAT\n  | VARIABLEfor : FOR VARIABLE FASTDEC  INT PUNTO_COMA VARIABLE sigcomparacion  INT PUNTO_COMA VARIABLE incremento LCBRACKET  bloqueI  RCBRACKETfor2 : FOR comparacionF LCBRACKET  bloqueI  RCBRACKETfor3 : FOR LCBRACKET bloqueI  RCBRACKETincremento : MASMAS\n                | MENOSMENOSsigcomparacion : MENORQUE\n                     | MAYORQUE\n                     | DIFERENTE\n                     | COMPARA_IGUAL\n                     | MAYORIGUAL\n                     | MENORIGUAL\n                     comparacionF : dato sigcomparacion datoarray : VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET\n            | VARIABLE FASTDEC LBRACKET INT RBRACKET  TDATA LCBRACKET elementArray RCBRACKETelementArray : dato\n                   | dato COMMA elementArray funcion : funSimple\n              | funcPa\n              | funcRetorno\n              | funcCompleta funSimple : FUNC nombreFuncion LPAREN RPAREN LCBRACKET bloqueI RCBRACKETfuncPa : FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET bloqueI RCBRACKETfuncRetorno : FUNC nombreFuncion LPAREN  RPAREN LPAREN datoReturn  RPAREN LCBRACKET bloqueI  returnF RCBRACKETfuncCompleta : FUNC nombreFuncion LPAREN parametrosF RPAREN LPAREN datoReturn  RPAREN LCBRACKET bloqueI  returnF RCBRACKETnombreFuncion : VARIABLEparametrosF : VARIABLE TDATA\n                | VARIABLE TDATA COMMA parametrosFdatoReturn : TDATA\n                  | TDATA COMMA TDATAreturnF : RETURN dato\n              | RETURN elementArray mapa : VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET\n  TDATA : TSTRING \n  | TINT\n  | TFLOAT\n  adentro : definicion \n  | definicion COMMA adentro\n   definicion : dato COLON dato\n  si : IF comparacion LCBRACKET instrucciones RCBRACKETcomparacion : dato sigcomparacion datoasignaciones : varsimple\n  | varobviado\n  | decfastvarsimple : VAR VARIABLE TDATA EQUALS datovarobviado : VAR VARIABLE EQUALS datodecfast : VARIABLE FASTDEC datoconcatDatos : STRING MAS STRING\n                  | INT MAS INT ArraySemantica :  VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET\n            | VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKETelementStringS : STRING\n                   | STRING COMMA elementStringS elementIntS : INT\n                   | INT COMMA elementIntS expresionCondicion : VARIABLE FASTDEC comparacionswitchh : SWITCH VARIABLE LCBRACKET cases def RCBRACKETcases : case1 \n  | case1  casescase1 : CASE INT COLON instruccionesdef : DEFAULT COLON instrucciones'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,16,-19,-20,-21,16,-76,-67,-69,16,-68,-16,-17,-24,-61,-66,-23,-60,-65,16,-77,16,16,16,-42,-71,16,-43,-35,16,-53,-34,-70,-44,16,-45,-22,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,17,-19,-20,-21,17,-76,-67,-69,17,-68,-16,-17,-24,-61,-66,-23,-60,-65,17,-77,17,17,17,-42,-71,17,-43,-35,17,-53,-34,-70,-44,17,-45,-22,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,18,-19,-20,-21,18,-76,-67,-69,18,-68,-16,-17,-24,-61,-66,-23,-60,-65,18,-77,18,18,18,-42,-71,18,-43,-35,18,-53,-34,-70,-44,18,-45,-22,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,21,22,23,24,25,26,28,29,30,31,32,34,35,37,38,41,42,44,48,58,59,60,61,62,63,64,65,68,69,70,71,72,73,78,80,81,82,84,90,92,93,100,101,105,107,113,121,122,123,128,129,132,141,146,150,151,153,156,157,161,162,168,170,171,172,174,175,178,186,190,191,193,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,36,48,49,-38,-39,-40,-41,51,-62,-63,-64,53,48,48,-18,19,-19,-20,48,-21,19,48,-27,-28,-29,-30,-31,-32,-76,-67,-69,19,48,48,-68,99,-16,-17,-24,-61,-66,48,116,-23,-60,-65,19,-77,19,19,19,99,48,-42,48,-71,48,19,-43,169,-35,48,19,-53,48,48,-34,-70,48,-44,19,-45,-22,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,21,-19,-20,-21,21,-76,-67,-69,21,-68,-16,-17,-24,-61,-66,-23,-60,-65,21,-77,21,21,21,-42,-71,21,-43,-35,21,-53,-34,-70,-44,21,-45,-22,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,22,-19,-20,-21,22,-76,-67,-69,22,-68,-16,-17,-24,-61,-66,-23,-60,-65,22,-77,22,22,22,-42,-71,22,-43,-35,22,-53,-34,-70,-44,22,-45,-22,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,21,23,24,25,26,29,30,31,34,35,37,38,41,42,44,48,50,58,59,60,61,62,63,64,65,68,69,70,71,72,73,78,81,82,84,90,92,93,101,105,107,113,121,122,123,128,132,141,146,150,151,152,153,156,161,162,168,170,171,172,174,175,176,178,186,190,191,193,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,41,41,-38,-39,-40,-41,-62,-63,-64,41,41,-18,27,-19,-20,41,-21,78,27,41,-27,-28,-29,-30,-31,-32,-76,-67,-69,27,41,41,-68,-16,-17,-24,-61,-66,41,-23,-60,-65,27,-77,27,27,27,41,-42,41,-71,41,166,27,-43,-35,41,27,-53,41,41,-34,-70,166,41,-44,27,-45,-22,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,21,23,24,25,26,29,30,31,34,35,37,38,41,42,44,45,48,56,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,78,81,82,84,90,91,92,93,96,101,105,107,113,119,121,122,123,128,130,132,141,146,149,150,151,153,156,161,162,168,170,171,172,174,175,178,186,190,191,193,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,37,37,-38,-39,-40,-41,-62,-63,-64,37,37,-18,20,-19,-20,37,70,-21,83,20,37,-27,-28,-29,-30,-31,-32,88,-76,-67,-69,20,37,37,-68,-16,-17,-24,-61,106,-66,37,111,-23,-60,-65,20,133,-77,20,20,20,145,37,-42,37,133,-71,37,20,-43,-35,37,20,-53,37,37,-34,-70,37,-44,20,-45,-22,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,28,-19,-20,-21,28,-76,-67,-69,28,-68,-16,-17,-24,-61,-66,-23,-60,-65,28,-77,28,28,28,-42,-71,28,-43,-35,28,-53,-34,-70,-44,28,-45,-22,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,38,41,42,48,58,68,69,70,71,78,81,82,84,90,92,101,105,107,113,121,122,123,128,141,150,153,156,161,168,170,174,175,186,190,191,193,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,32,-19,-20,-21,32,-76,-67,-69,32,-68,-16,-17,-24,-61,-66,-23,-60,-65,32,-77,32,32,32,-42,-71,32,-43,-35,32,-53,-34,-70,-44,32,-45,-22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,33,37,41,42,48,68,69,70,78,81,82,84,90,92,101,105,107,121,141,150,156,161,170,174,175,186,191,193,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-2,-18,-19,-20,-21,-76,-67,-69,-68,-16,-17,-24,-61,-66,-23,-60,-65,-77,-42,-71,-43,-35,-53,-34,-70,-44,-45,-22,]),'RCBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,33,37,41,42,48,57,68,69,70,78,81,82,84,85,89,90,92,101,105,107,108,121,126,133,134,137,141,143,147,148,150,156,158,159,161,163,164,165,166,170,173,174,175,177,183,184,185,186,187,188,189,191,192,193,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-2,-18,-19,-20,-21,84,-76,-67,-69,-68,-16,-17,-24,101,105,-61,-66,-23,-60,-65,121,-77,141,-74,150,-81,-42,156,161,-36,-71,-43,170,-57,-35,-75,174,175,-72,-53,-37,-34,-70,186,-58,-59,-73,-44,-36,-52,191,-45,193,-22,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,33,37,41,42,48,68,69,70,78,81,82,84,90,92,101,105,107,121,141,150,156,161,167,170,174,175,179,186,191,193,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-2,-18,-19,-20,-21,-76,-67,-69,-68,-16,-17,-24,-61,-66,-23,-60,-65,-77,-42,-71,-43,-35,178,-53,-34,-70,178,-44,-45,-22,]),'CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,41,42,48,68,69,70,78,79,81,82,84,90,92,95,101,105,107,121,138,141,150,156,161,170,174,175,186,191,193,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,-19,-20,-21,-76,-67,-69,-68,96,-16,-17,-24,-61,-66,96,-23,-60,-65,-77,-80,-42,-71,-43,-35,-53,-34,-70,-44,-45,-22,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,23,24,25,26,29,30,31,37,41,42,48,68,69,70,78,81,82,84,90,92,94,95,101,105,107,110,121,138,141,150,156,161,170,174,175,186,191,193,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-38,-39,-40,-41,-62,-63,-64,-18,-19,-20,-21,-76,-67,-69,-68,-16,-17,-24,-61,-66,109,-78,-23,-60,-65,-79,-77,-80,-42,-71,-43,-35,-53,-34,-70,-44,-45,-22,]),'LPAREN':([16,17,52,53,97,114,],[34,35,80,-46,112,127,]),'LCBRACKET':([18,37,39,41,42,46,48,51,75,76,77,86,90,97,104,114,118,131,135,136,139,155,180,181,182,],[38,-18,58,-19,-20,71,-21,79,-54,-55,-56,-33,-61,113,119,128,132,146,151,152,153,168,190,-25,-26,]),'FLOAT':([18,21,34,35,44,59,60,61,62,63,64,65,72,73,93,132,146,151,162,171,172,178,],[42,42,42,42,42,42,-27,-28,-29,-30,-31,-32,42,42,42,42,42,42,42,42,42,42,]),'EQUALS':([19,49,74,75,76,77,],[43,73,93,-54,-55,-56,]),'FASTDEC':([19,36,],[44,56,]),'MAS':([20,27,],[45,50,]),'MENORQUE':([36,37,40,41,42,47,48,69,116,],[-21,-18,60,-19,-20,60,-21,60,60,]),'MAYORQUE':([36,37,40,41,42,47,48,69,116,],[-21,-18,61,-19,-20,61,-21,61,61,]),'DIFERENTE':([36,37,40,41,42,47,48,69,116,],[-21,-18,62,-19,-20,62,-21,62,62,]),'COMPARA_IGUAL':([36,37,40,41,42,47,48,69,116,],[-21,-18,63,-19,-20,63,-21,63,63,]),'MAYORIGUAL':([36,37,40,41,42,47,48,69,116,],[-21,-18,64,-19,-20,64,-21,64,64,]),'MENORIGUAL':([36,37,40,41,42,47,48,69,116,],[-21,-18,65,-19,-20,65,-21,65,65,]),'RPAREN':([37,41,42,48,54,55,75,76,77,80,98,115,124,125,142,144,154,],[-18,-19,-20,-21,81,82,-54,-55,-56,97,114,-47,139,-49,155,-48,-50,]),'COMMA':([37,41,42,48,75,76,77,115,125,133,148,159,166,184,187,],[-18,-19,-20,-21,-54,-55,-56,129,140,149,162,171,176,-59,162,]),'COLON':([37,41,42,48,109,111,160,],[-18,-19,-20,-21,122,123,172,]),'MAP':([43,],[66,]),'LBRACKET':([44,66,73,],[67,87,91,]),'TSTRING':([49,87,99,103,112,117,120,127,140,],[75,75,75,75,75,75,136,75,75,]),'TINT':([49,87,88,99,103,112,117,120,127,140,],[76,76,104,76,76,76,76,76,76,76,]),'TFLOAT':([49,87,99,103,112,117,120,127,140,],[77,77,77,77,77,77,77,77,77,]),'RBRACKET':([75,76,77,88,102,106,],[-54,-55,-56,103,117,120,]),'PUNTO_COMA':([83,145,],[100,157,]),'MASMAS':([169,],[181,]),'MENOSMENOS':([169,],[182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloqueI':([0,2,38,58,113,128,153,168,190,],[1,33,57,85,126,143,167,179,192,]),'instrucciones':([0,2,38,58,71,113,122,123,128,153,168,190,],[2,2,2,2,89,2,137,138,2,2,2,2,]),'impresion':([0,2,38,58,71,113,122,123,128,153,168,190,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'for':([0,2,38,58,71,113,122,123,128,153,168,190,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'for2':([0,2,38,58,71,113,122,123,128,153,168,190,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'for3':([0,2,38,58,71,113,122,123,128,153,168,190,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'mapa':([0,2,38,58,71,113,122,123,128,153,168,190,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'si':([0,2,38,58,71,113,122,123,128,153,168,190,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'array':([0,2,38,58,71,113,122,123,128,153,168,190,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'funcion':([0,2,38,58,71,113,122,123,128,153,168,190,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'concatDatos':([0,2,38,58,71,113,122,123,128,153,168,190,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'ArraySemantica':([0,2,38,58,71,113,122,123,128,153,168,190,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'switchh':([0,2,38,58,71,113,122,123,128,153,168,190,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'asignaciones':([0,2,38,58,71,113,122,123,128,153,168,190,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'expresionCondicion':([0,2,38,58,71,113,122,123,128,153,168,190,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'funSimple':([0,2,38,58,71,113,122,123,128,153,168,190,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'funcPa':([0,2,38,58,71,113,122,123,128,153,168,190,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'funcRetorno':([0,2,38,58,71,113,122,123,128,153,168,190,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'funcCompleta':([0,2,38,58,71,113,122,123,128,153,168,190,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'varsimple':([0,2,38,58,71,113,122,123,128,153,168,190,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'varobviado':([0,2,38,58,71,113,122,123,128,153,168,190,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'decfast':([0,2,38,58,71,113,122,123,128,153,168,190,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'comparacionF':([18,],[39,]),'dato':([18,21,34,35,44,59,72,73,93,132,146,151,162,171,172,178,],[40,47,54,55,69,86,90,92,107,148,160,148,148,160,184,187,]),'comparacion':([21,44,],[46,68,]),'nombreFuncion':([32,],[52,]),'sigcomparacion':([40,47,69,116,],[59,72,72,130,]),'TDATA':([49,87,99,103,112,117,120,127,140,],[74,102,115,118,125,131,135,125,154,]),'cases':([79,95,],[94,110,]),'case1':([79,95,],[95,95,]),'parametrosF':([80,129,],[98,144,]),'def':([94,],[108,]),'datoReturn':([112,127,],[124,142,]),'elementIntS':([119,149,],[134,163,]),'elementArray':([132,151,162,178,],[147,164,173,188,]),'adentro':([146,171,],[158,183,]),'definicion':([146,171,],[159,159,]),'elementStringS':([152,176,],[165,185,]),'returnF':([167,179,],[177,189,]),'incremento':([169,],[180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bloqueI","S'",1,None,None,None),
  ('bloqueI -> instrucciones','bloqueI',1,'p_bloqueinstrucciones','sintactico.py',14),
  ('bloqueI -> instrucciones bloqueI','bloqueI',2,'p_bloqueinstrucciones','sintactico.py',15),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> for2','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> for3','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> si','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('instrucciones -> array','instrucciones',1,'p_instrucciones','sintactico.py',25),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','sintactico.py',26),
  ('instrucciones -> concatDatos','instrucciones',1,'p_instrucciones','sintactico.py',27),
  ('instrucciones -> ArraySemantica','instrucciones',1,'p_instrucciones','sintactico.py',28),
  ('instrucciones -> switchh','instrucciones',1,'p_instrucciones','sintactico.py',29),
  ('instrucciones -> asignaciones','instrucciones',1,'p_instrucciones','sintactico.py',30),
  ('instrucciones -> expresionCondicion','instrucciones',1,'p_instrucciones','sintactico.py',31),
  ('impresion -> PRINT LPAREN dato RPAREN','impresion',4,'p_impresion','sintactico.py',36),
  ('impresion -> PRINTLN LPAREN dato RPAREN','impresion',4,'p_impresion','sintactico.py',37),
  ('dato -> INT','dato',1,'p_dato','sintactico.py',40),
  ('dato -> STRING','dato',1,'p_dato','sintactico.py',41),
  ('dato -> FLOAT','dato',1,'p_dato','sintactico.py',42),
  ('dato -> VARIABLE','dato',1,'p_dato','sintactico.py',43),
  ('for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE incremento LCBRACKET bloqueI RCBRACKET','for',14,'p_for','sintactico.py',51),
  ('for2 -> FOR comparacionF LCBRACKET bloqueI RCBRACKET','for2',5,'p_for2','sintactico.py',55),
  ('for3 -> FOR LCBRACKET bloqueI RCBRACKET','for3',4,'p_for3','sintactico.py',59),
  ('incremento -> MASMAS','incremento',1,'p_incremento','sintactico.py',62),
  ('incremento -> MENOSMENOS','incremento',1,'p_incremento','sintactico.py',63),
  ('sigcomparacion -> MENORQUE','sigcomparacion',1,'p_signoscomparacion','sintactico.py',65),
  ('sigcomparacion -> MAYORQUE','sigcomparacion',1,'p_signoscomparacion','sintactico.py',66),
  ('sigcomparacion -> DIFERENTE','sigcomparacion',1,'p_signoscomparacion','sintactico.py',67),
  ('sigcomparacion -> COMPARA_IGUAL','sigcomparacion',1,'p_signoscomparacion','sintactico.py',68),
  ('sigcomparacion -> MAYORIGUAL','sigcomparacion',1,'p_signoscomparacion','sintactico.py',69),
  ('sigcomparacion -> MENORIGUAL','sigcomparacion',1,'p_signoscomparacion','sintactico.py',70),
  ('comparacionF -> dato sigcomparacion dato','comparacionF',3,'p_comparacion','sintactico.py',74),
  ('array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET','array',10,'p_array','sintactico.py',81),
  ('array -> VARIABLE FASTDEC LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET','array',9,'p_array','sintactico.py',82),
  ('elementArray -> dato','elementArray',1,'p_elementArray','sintactico.py',85),
  ('elementArray -> dato COMMA elementArray','elementArray',3,'p_elementArray','sintactico.py',86),
  ('funcion -> funSimple','funcion',1,'p_funciones','sintactico.py',93),
  ('funcion -> funcPa','funcion',1,'p_funciones','sintactico.py',94),
  ('funcion -> funcRetorno','funcion',1,'p_funciones','sintactico.py',95),
  ('funcion -> funcCompleta','funcion',1,'p_funciones','sintactico.py',96),
  ('funSimple -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET bloqueI RCBRACKET','funSimple',7,'p_funcionSimple','sintactico.py',98),
  ('funcPa -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET bloqueI RCBRACKET','funcPa',8,'p_funcionParametros','sintactico.py',101),
  ('funcRetorno -> FUNC nombreFuncion LPAREN RPAREN LPAREN datoReturn RPAREN LCBRACKET bloqueI returnF RCBRACKET','funcRetorno',11,'p_funcRetorno','sintactico.py',104),
  ('funcCompleta -> FUNC nombreFuncion LPAREN parametrosF RPAREN LPAREN datoReturn RPAREN LCBRACKET bloqueI returnF RCBRACKET','funcCompleta',12,'p_funcionCompleta','sintactico.py',107),
  ('nombreFuncion -> VARIABLE','nombreFuncion',1,'p_nombreFuncion','sintactico.py',110),
  ('parametrosF -> VARIABLE TDATA','parametrosF',2,'p_parametrosfuncion','sintactico.py',113),
  ('parametrosF -> VARIABLE TDATA COMMA parametrosF','parametrosF',4,'p_parametrosfuncion','sintactico.py',114),
  ('datoReturn -> TDATA','datoReturn',1,'p_datoReturn','sintactico.py',116),
  ('datoReturn -> TDATA COMMA TDATA','datoReturn',3,'p_datoReturn','sintactico.py',117),
  ('returnF -> RETURN dato','returnF',2,'p_return','sintactico.py',119),
  ('returnF -> RETURN elementArray','returnF',2,'p_return','sintactico.py',120),
  ('mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET','mapa',10,'p_mapa','sintactico.py',124),
  ('TDATA -> TSTRING','TDATA',1,'p_dataTokensAvailable','sintactico.py',127),
  ('TDATA -> TINT','TDATA',1,'p_dataTokensAvailable','sintactico.py',128),
  ('TDATA -> TFLOAT','TDATA',1,'p_dataTokensAvailable','sintactico.py',129),
  ('adentro -> definicion','adentro',1,'p_adentro','sintactico.py',132),
  ('adentro -> definicion COMMA adentro','adentro',3,'p_adentro','sintactico.py',133),
  ('definicion -> dato COLON dato','definicion',3,'p_definicion','sintactico.py',136),
  ('si -> IF comparacion LCBRACKET instrucciones RCBRACKET','si',5,'p_if','sintactico.py',142),
  ('comparacion -> dato sigcomparacion dato','comparacion',3,'p_bloquecomparacion','sintactico.py',144),
  ('asignaciones -> varsimple','asignaciones',1,'p_asignaciones','sintactico.py',149),
  ('asignaciones -> varobviado','asignaciones',1,'p_asignaciones','sintactico.py',150),
  ('asignaciones -> decfast','asignaciones',1,'p_asignaciones','sintactico.py',151),
  ('varsimple -> VAR VARIABLE TDATA EQUALS dato','varsimple',5,'p_simplevar','sintactico.py',153),
  ('varobviado -> VAR VARIABLE EQUALS dato','varobviado',4,'p_varobviado','sintactico.py',155),
  ('decfast -> VARIABLE FASTDEC dato','decfast',3,'p_decfast','sintactico.py',157),
  ('concatDatos -> STRING MAS STRING','concatDatos',3,'p_ConcatenacionDeDatos','sintactico.py',163),
  ('concatDatos -> INT MAS INT','concatDatos',3,'p_ConcatenacionDeDatos','sintactico.py',164),
  ('ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET','ArraySemantica',10,'p_SemanticaARRAY','sintactico.py',168),
  ('ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET','ArraySemantica',8,'p_SemanticaARRAY','sintactico.py',169),
  ('elementStringS -> STRING','elementStringS',1,'p_ElementstringA','sintactico.py',173),
  ('elementStringS -> STRING COMMA elementStringS','elementStringS',3,'p_ElementstringA','sintactico.py',174),
  ('elementIntS -> INT','elementIntS',1,'p_ElementIntA','sintactico.py',176),
  ('elementIntS -> INT COMMA elementIntS','elementIntS',3,'p_ElementIntA','sintactico.py',177),
  ('expresionCondicion -> VARIABLE FASTDEC comparacion','expresionCondicion',3,'p_expresionCondiciones','sintactico.py',181),
  ('switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET','switchh',6,'p_switch','sintactico.py',186),
  ('cases -> case1','cases',1,'p_cases','sintactico.py',188),
  ('cases -> case1 cases','cases',2,'p_cases','sintactico.py',189),
  ('case1 -> CASE INT COLON instrucciones','case1',4,'p_case','sintactico.py',191),
  ('def -> DEFAULT COLON instrucciones','def',3,'p_def','sintactico.py',193),
]
