
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CASE COLON COMMA COMPARA_IGUAL DEFAULT DIFERENTE DIV DQMARK ELSE EQUALS FALLTHROUGH FASTDEC FLOAT FOR FUNC IF INT LBRACKET LCBRACKET LPAREN MAP MAS MASMAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MENOSMENOS MUL PRINT PRINTLN PUNTO_COMA RANGE RBRACKET RCBRACKET RETURN RPAREN STRING SWITCH TFLOAT TINT TSTRING VAR VARIABLEinstrucciones : impresion\n                      | for\n                      | for2\n                      | for3\n                      | mapa\n                      | si\n                      | array\n                      | funcion\n                      | concatDatos\n                      | ArraySemantica\n                      | switchh\n                      | asignaciones\n                      | expresionCondicion\n                      impresion : PRINT LPAREN dato RPAREN\n  | PRINTLN LPAREN dato RPARENdato : INT \n  | STRING\n  | FLOAT\n  | VARIABLEfor : FOR VARIABLE FASTDEC  INT PUNTO_COMA VARIABLE sigcomparacion  INT PUNTO_COMA VARIABLE MASMAS LCBRACKET for2 : FOR VARIABLE sigcomparacion INT LCBRACKETfor3 : FOR LCBRACKET instrucciones RCBRACKETsigcomparacion : MENORQUE\n                     | MAYORQUE\n                     | DIFERENTE\n                     | COMPARA_IGUAL\n                     | MAYORIGUAL\n                     | MENORIGUAL\n                     array : VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET\n            | VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKETelementArray : dato\n                   | dato COMMA elementArray funcion : funSimple\n              | funcPa\n              | funcRetorno\n              | funcCompleta funSimple : FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKETfuncPa : FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKETfuncRetorno : FUNC nombreFuncion LPAREN  RPAREN LPAREN datoReturn  RPAREN LCBRACKET instrucciones  returnF RCBRACKETfuncCompleta : FUNC nombreFuncion LPAREN parametrosF RPAREN LPAREN datoReturn  RPAREN LCBRACKET instrucciones  returnF RCBRACKETnombreFuncion : VARIABLEparametrosF : VARIABLE TDATA\n                | VARIABLE TDATA COMMA parametrosFdatoReturn : TDATA\n                  | TDATA COMMA TDATAreturnF : RETURN dato\n              | RETURN elementArray mapa : VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET\n  TDATA : TSTRING \n  | TINT\n  | TFLOAT\n  adentro : definicion \n  | definicion COMMA adentro\n   definicion : dato COLON dato\n  si : IF comparacion LCBRACKET instrucciones RCBRACKETcomparacion : dato sigcomparacion datoasignaciones : varsimple\n  | varobviado\n  | decfastvarsimple : VAR VARIABLE TDATA EQUALS datovarobviado : VAR VARIABLE EQUALS datodecfast : VARIABLE FASTDEC datoconcatDatos : STRING MAS STRING\n                  | INT MAS INT ArraySemantica :  VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET\n            | VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKETelementStringS : STRING\n                   | STRING COMMA elementStringS elementIntS : INT\n                   | INT COMMA elementIntS expresionCondicion : VARIABLE FASTDEC comparacionswitchh : SWITCH VARIABLE LCBRACKET cases def RCBRACKETcases : case1 \n  | case1  casescase1 : CASE INT COLON instruccionesdef : DEFAULT COMMA instrucciones'
    
_lr_action_items = {'PRINT':([0,35,66,107,116,117,122,148,162,],[15,15,15,15,15,15,15,15,15,]),'PRINTLN':([0,35,66,107,116,117,122,148,162,],[16,16,16,16,16,16,16,16,16,]),'FOR':([0,35,66,107,116,117,122,148,162,],[17,17,17,17,17,17,17,17,17,]),'VARIABLE':([0,17,20,21,27,31,32,33,35,37,54,55,56,57,58,59,66,67,68,75,87,94,107,112,116,117,122,123,141,143,146,148,152,162,165,166,171,],[18,34,44,45,47,49,44,44,18,44,-23,-24,-25,-26,-27,-28,18,44,44,93,44,110,18,44,18,18,18,93,44,44,44,18,163,18,44,44,44,]),'IF':([0,35,66,107,116,117,122,148,162,],[20,20,20,20,20,20,20,20,20,]),'VAR':([0,35,66,107,116,117,122,148,162,],[21,21,21,21,21,21,21,21,21,]),'STRING':([0,20,32,33,35,37,46,54,55,56,57,58,59,66,67,68,87,107,112,116,117,122,141,143,146,147,148,162,165,166,169,171,],[26,42,42,42,26,42,73,-23,-24,-25,-26,-27,-28,26,42,42,42,26,42,26,26,26,42,42,42,160,26,26,42,42,160,42,]),'INT':([0,20,32,33,35,37,38,52,53,54,55,56,57,58,59,62,66,67,68,85,87,90,107,112,113,116,117,122,124,141,143,144,146,148,162,165,166,171,],[19,41,41,41,19,41,65,78,79,-23,-24,-25,-26,-27,-28,82,19,41,41,100,41,105,19,41,128,19,19,19,140,41,41,128,41,19,19,41,41,41,]),'SWITCH':([0,35,66,107,116,117,122,148,162,],[27,27,27,27,27,27,27,27,27,]),'FUNC':([0,35,66,107,116,117,122,148,162,],[31,31,31,31,31,31,31,31,31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,28,29,30,41,42,43,44,63,64,65,73,76,77,80,84,86,95,99,101,115,136,142,145,151,164,167,168,177,181,182,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-33,-34,-35,-36,-57,-58,-59,-16,-17,-18,-19,-71,-62,-64,-63,-14,-15,-22,-56,-61,-21,-55,-60,-72,-37,-30,-66,-38,-48,-29,-65,-39,-20,-40,]),'RCBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,28,29,30,41,42,43,44,60,63,64,65,73,76,77,80,83,84,86,95,99,101,102,115,120,126,127,128,129,132,136,138,142,145,151,153,154,156,157,158,159,160,164,167,168,170,174,175,176,177,178,179,180,181,182,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-33,-34,-35,-36,-57,-58,-59,-16,-17,-18,-19,80,-71,-62,-64,-63,-14,-15,-22,99,-56,-61,-21,-55,-60,115,-72,136,142,-31,-69,145,-76,-37,151,-30,-66,-38,164,-52,-32,-70,167,168,-67,-48,-29,-65,177,-53,-54,-68,-39,-31,-47,182,-20,-40,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,28,29,30,41,42,43,44,63,64,65,73,74,76,77,80,84,86,89,95,99,101,115,133,136,142,145,151,164,167,168,177,181,182,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-33,-34,-35,-36,-57,-58,-59,-16,-17,-18,-19,-71,-62,-64,-63,90,-14,-15,-22,-56,-61,90,-21,-55,-60,-72,-75,-37,-30,-66,-38,-48,-29,-65,-39,-20,-40,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,28,29,30,41,42,43,44,63,64,65,73,76,77,80,84,86,88,89,95,99,101,104,115,133,136,142,145,151,164,167,168,177,181,182,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-33,-34,-35,-36,-57,-58,-59,-16,-17,-18,-19,-71,-62,-64,-63,-14,-15,-22,-56,-61,103,-73,-21,-55,-60,-74,-72,-75,-37,-30,-66,-38,-48,-29,-65,-39,-20,-40,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,28,29,30,41,42,43,44,63,64,65,73,76,77,80,84,86,95,99,101,115,136,142,145,151,161,164,167,168,172,177,181,182,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-33,-34,-35,-36,-57,-58,-59,-16,-17,-18,-19,-71,-62,-64,-63,-14,-15,-22,-56,-61,-21,-55,-60,-72,-37,-30,-66,-38,171,-48,-29,-65,171,-39,-20,-40,]),'LPAREN':([15,16,48,49,91,108,],[32,33,75,-41,106,121,]),'LCBRACKET':([17,39,41,42,43,44,47,70,71,72,79,84,91,97,98,108,125,130,131,134,150,173,],[35,66,-16,-17,-18,-19,74,-49,-50,-51,95,-56,107,112,113,122,141,146,147,148,162,181,]),'EQUALS':([18,45,69,70,71,72,],[36,68,87,-49,-50,-51,]),'FASTDEC':([18,34,],[37,52,]),'MAS':([19,26,],[38,46,]),'FLOAT':([20,32,33,37,54,55,56,57,58,59,67,68,87,112,141,143,146,165,166,171,],[43,43,43,43,-23,-24,-25,-26,-27,-28,43,43,43,43,43,43,43,43,43,43,]),'MENORQUE':([34,40,41,42,43,44,64,110,],[54,54,-16,-17,-18,-19,54,54,]),'MAYORQUE':([34,40,41,42,43,44,64,110,],[55,55,-16,-17,-18,-19,55,55,]),'DIFERENTE':([34,40,41,42,43,44,64,110,],[56,56,-16,-17,-18,-19,56,56,]),'COMPARA_IGUAL':([34,40,41,42,43,44,64,110,],[57,57,-16,-17,-18,-19,57,57,]),'MAYORIGUAL':([34,40,41,42,43,44,64,110,],[58,58,-16,-17,-18,-19,58,58,]),'MENORIGUAL':([34,40,41,42,43,44,64,110,],[59,59,-16,-17,-18,-19,59,59,]),'MAP':([36,],[61,]),'LBRACKET':([37,61,68,],[62,81,85,]),'RPAREN':([41,42,43,44,50,51,70,71,72,75,92,109,118,119,137,139,149,],[-16,-17,-18,-19,76,77,-49,-50,-51,91,108,-42,134,-44,150,-43,-45,]),'COMMA':([41,42,43,44,70,71,72,103,109,119,127,128,154,160,175,178,],[-16,-17,-18,-19,-49,-50,-51,116,123,135,143,144,165,169,-54,143,]),'COLON':([41,42,43,44,105,155,],[-16,-17,-18,-19,117,166,]),'TSTRING':([45,81,82,93,106,111,114,121,135,],[70,70,70,70,70,70,131,70,70,]),'TINT':([45,81,82,93,106,111,114,121,135,],[71,71,98,71,71,71,71,71,71,]),'TFLOAT':([45,81,82,93,106,111,114,121,135,],[72,72,72,72,72,72,72,72,72,]),'RBRACKET':([70,71,72,96,100,],[-49,-50,-51,111,114,]),'PUNTO_COMA':([78,140,],[94,152,]),'MASMAS':([163,],[173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,35,66,107,116,117,122,148,162,],[1,60,83,120,132,133,138,161,172,]),'impresion':([0,35,66,107,116,117,122,148,162,],[2,2,2,2,2,2,2,2,2,]),'for':([0,35,66,107,116,117,122,148,162,],[3,3,3,3,3,3,3,3,3,]),'for2':([0,35,66,107,116,117,122,148,162,],[4,4,4,4,4,4,4,4,4,]),'for3':([0,35,66,107,116,117,122,148,162,],[5,5,5,5,5,5,5,5,5,]),'mapa':([0,35,66,107,116,117,122,148,162,],[6,6,6,6,6,6,6,6,6,]),'si':([0,35,66,107,116,117,122,148,162,],[7,7,7,7,7,7,7,7,7,]),'array':([0,35,66,107,116,117,122,148,162,],[8,8,8,8,8,8,8,8,8,]),'funcion':([0,35,66,107,116,117,122,148,162,],[9,9,9,9,9,9,9,9,9,]),'concatDatos':([0,35,66,107,116,117,122,148,162,],[10,10,10,10,10,10,10,10,10,]),'ArraySemantica':([0,35,66,107,116,117,122,148,162,],[11,11,11,11,11,11,11,11,11,]),'switchh':([0,35,66,107,116,117,122,148,162,],[12,12,12,12,12,12,12,12,12,]),'asignaciones':([0,35,66,107,116,117,122,148,162,],[13,13,13,13,13,13,13,13,13,]),'expresionCondicion':([0,35,66,107,116,117,122,148,162,],[14,14,14,14,14,14,14,14,14,]),'funSimple':([0,35,66,107,116,117,122,148,162,],[22,22,22,22,22,22,22,22,22,]),'funcPa':([0,35,66,107,116,117,122,148,162,],[23,23,23,23,23,23,23,23,23,]),'funcRetorno':([0,35,66,107,116,117,122,148,162,],[24,24,24,24,24,24,24,24,24,]),'funcCompleta':([0,35,66,107,116,117,122,148,162,],[25,25,25,25,25,25,25,25,25,]),'varsimple':([0,35,66,107,116,117,122,148,162,],[28,28,28,28,28,28,28,28,28,]),'varobviado':([0,35,66,107,116,117,122,148,162,],[29,29,29,29,29,29,29,29,29,]),'decfast':([0,35,66,107,116,117,122,148,162,],[30,30,30,30,30,30,30,30,30,]),'comparacion':([20,37,],[39,63,]),'dato':([20,32,33,37,67,68,87,112,141,143,146,165,166,171,],[40,50,51,64,84,86,101,127,155,127,127,155,175,178,]),'nombreFuncion':([31,],[48,]),'sigcomparacion':([34,40,64,110,],[53,67,67,124,]),'TDATA':([45,81,82,93,106,111,114,121,135,],[69,96,97,109,119,125,130,119,149,]),'cases':([74,89,],[88,104,]),'case1':([74,89,],[89,89,]),'parametrosF':([75,123,],[92,139,]),'def':([88,],[102,]),'datoReturn':([106,121,],[118,137,]),'elementArray':([112,143,146,171,],[126,156,158,179,]),'elementIntS':([113,144,],[129,157,]),'adentro':([141,165,],[153,174,]),'definicion':([141,165,],[154,154,]),'elementStringS':([147,169,],[159,176,]),'returnF':([161,172,],[170,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> for2','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> for3','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> si','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> array','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> concatDatos','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> ArraySemantica','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> switchh','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> asignaciones','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> expresionCondicion','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('impresion -> PRINT LPAREN dato RPAREN','impresion',4,'p_impresion','sintactico.py',25),
  ('impresion -> PRINTLN LPAREN dato RPAREN','impresion',4,'p_impresion','sintactico.py',26),
  ('dato -> INT','dato',1,'p_dato','sintactico.py',29),
  ('dato -> STRING','dato',1,'p_dato','sintactico.py',30),
  ('dato -> FLOAT','dato',1,'p_dato','sintactico.py',31),
  ('dato -> VARIABLE','dato',1,'p_dato','sintactico.py',32),
  ('for -> FOR VARIABLE FASTDEC INT PUNTO_COMA VARIABLE sigcomparacion INT PUNTO_COMA VARIABLE MASMAS LCBRACKET','for',12,'p_for','sintactico.py',40),
  ('for2 -> FOR VARIABLE sigcomparacion INT LCBRACKET','for2',5,'p_for2','sintactico.py',44),
  ('for3 -> FOR LCBRACKET instrucciones RCBRACKET','for3',4,'p_for3','sintactico.py',48),
  ('sigcomparacion -> MENORQUE','sigcomparacion',1,'p_signoscomparacion','sintactico.py',52),
  ('sigcomparacion -> MAYORQUE','sigcomparacion',1,'p_signoscomparacion','sintactico.py',53),
  ('sigcomparacion -> DIFERENTE','sigcomparacion',1,'p_signoscomparacion','sintactico.py',54),
  ('sigcomparacion -> COMPARA_IGUAL','sigcomparacion',1,'p_signoscomparacion','sintactico.py',55),
  ('sigcomparacion -> MAYORIGUAL','sigcomparacion',1,'p_signoscomparacion','sintactico.py',56),
  ('sigcomparacion -> MENORIGUAL','sigcomparacion',1,'p_signoscomparacion','sintactico.py',57),
  ('array -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TDATA LCBRACKET elementArray RCBRACKET','array',10,'p_array','sintactico.py',67),
  ('array -> VARIABLE FASTDEC LBRACKET INT TDATA LCBRACKET elementArray RCBRACKET','array',8,'p_array','sintactico.py',68),
  ('elementArray -> dato','elementArray',1,'p_elementArray','sintactico.py',71),
  ('elementArray -> dato COMMA elementArray','elementArray',3,'p_elementArray','sintactico.py',72),
  ('funcion -> funSimple','funcion',1,'p_funciones','sintactico.py',79),
  ('funcion -> funcPa','funcion',1,'p_funciones','sintactico.py',80),
  ('funcion -> funcRetorno','funcion',1,'p_funciones','sintactico.py',81),
  ('funcion -> funcCompleta','funcion',1,'p_funciones','sintactico.py',82),
  ('funSimple -> FUNC nombreFuncion LPAREN RPAREN LCBRACKET instrucciones RCBRACKET','funSimple',7,'p_funcionSimple','sintactico.py',84),
  ('funcPa -> FUNC nombreFuncion LPAREN parametrosF RPAREN LCBRACKET instrucciones RCBRACKET','funcPa',8,'p_funcionParametros','sintactico.py',87),
  ('funcRetorno -> FUNC nombreFuncion LPAREN RPAREN LPAREN datoReturn RPAREN LCBRACKET instrucciones returnF RCBRACKET','funcRetorno',11,'p_funcRetorno','sintactico.py',90),
  ('funcCompleta -> FUNC nombreFuncion LPAREN parametrosF RPAREN LPAREN datoReturn RPAREN LCBRACKET instrucciones returnF RCBRACKET','funcCompleta',12,'p_funcionCompleta','sintactico.py',93),
  ('nombreFuncion -> VARIABLE','nombreFuncion',1,'p_nombreFuncion','sintactico.py',96),
  ('parametrosF -> VARIABLE TDATA','parametrosF',2,'p_parametrosfuncion','sintactico.py',99),
  ('parametrosF -> VARIABLE TDATA COMMA parametrosF','parametrosF',4,'p_parametrosfuncion','sintactico.py',100),
  ('datoReturn -> TDATA','datoReturn',1,'p_datoReturn','sintactico.py',102),
  ('datoReturn -> TDATA COMMA TDATA','datoReturn',3,'p_datoReturn','sintactico.py',103),
  ('returnF -> RETURN dato','returnF',2,'p_return','sintactico.py',105),
  ('returnF -> RETURN elementArray','returnF',2,'p_return','sintactico.py',106),
  ('mapa -> VARIABLE EQUALS MAP LBRACKET TDATA RBRACKET TDATA LCBRACKET adentro RCBRACKET','mapa',10,'p_mapa','sintactico.py',110),
  ('TDATA -> TSTRING','TDATA',1,'p_dataTokensAvailable','sintactico.py',113),
  ('TDATA -> TINT','TDATA',1,'p_dataTokensAvailable','sintactico.py',114),
  ('TDATA -> TFLOAT','TDATA',1,'p_dataTokensAvailable','sintactico.py',115),
  ('adentro -> definicion','adentro',1,'p_adentro','sintactico.py',118),
  ('adentro -> definicion COMMA adentro','adentro',3,'p_adentro','sintactico.py',119),
  ('definicion -> dato COLON dato','definicion',3,'p_definicion','sintactico.py',122),
  ('si -> IF comparacion LCBRACKET instrucciones RCBRACKET','si',5,'p_if','sintactico.py',128),
  ('comparacion -> dato sigcomparacion dato','comparacion',3,'p_bloquecomparacion','sintactico.py',130),
  ('asignaciones -> varsimple','asignaciones',1,'p_asignaciones','sintactico.py',135),
  ('asignaciones -> varobviado','asignaciones',1,'p_asignaciones','sintactico.py',136),
  ('asignaciones -> decfast','asignaciones',1,'p_asignaciones','sintactico.py',137),
  ('varsimple -> VAR VARIABLE TDATA EQUALS dato','varsimple',5,'p_simplevar','sintactico.py',139),
  ('varobviado -> VAR VARIABLE EQUALS dato','varobviado',4,'p_varobviado','sintactico.py',141),
  ('decfast -> VARIABLE FASTDEC dato','decfast',3,'p_decfast','sintactico.py',143),
  ('concatDatos -> STRING MAS STRING','concatDatos',3,'p_ConcatenacionDeDatos','sintactico.py',149),
  ('concatDatos -> INT MAS INT','concatDatos',3,'p_ConcatenacionDeDatos','sintactico.py',150),
  ('ArraySemantica -> VAR VARIABLE EQUALS LBRACKET INT RBRACKET TSTRING LCBRACKET elementStringS RCBRACKET','ArraySemantica',10,'p_SemanticaARRAY','sintactico.py',154),
  ('ArraySemantica -> VARIABLE FASTDEC LBRACKET INT TINT LCBRACKET elementIntS RCBRACKET','ArraySemantica',8,'p_SemanticaARRAY','sintactico.py',155),
  ('elementStringS -> STRING','elementStringS',1,'p_ElementstringA','sintactico.py',159),
  ('elementStringS -> STRING COMMA elementStringS','elementStringS',3,'p_ElementstringA','sintactico.py',160),
  ('elementIntS -> INT','elementIntS',1,'p_ElementIntA','sintactico.py',162),
  ('elementIntS -> INT COMMA elementIntS','elementIntS',3,'p_ElementIntA','sintactico.py',163),
  ('expresionCondicion -> VARIABLE FASTDEC comparacion','expresionCondicion',3,'p_expresionCondiciones','sintactico.py',167),
  ('switchh -> SWITCH VARIABLE LCBRACKET cases def RCBRACKET','switchh',6,'p_switch','sintactico.py',172),
  ('cases -> case1','cases',1,'p_cases','sintactico.py',174),
  ('cases -> case1 cases','cases',2,'p_cases','sintactico.py',175),
  ('case1 -> CASE INT COLON instrucciones','case1',4,'p_case','sintactico.py',177),
  ('def -> DEFAULT COMMA instrucciones','def',3,'p_def','sintactico.py',179),
]
